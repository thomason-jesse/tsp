# confirmations
yes :- C : yes
no :- C : no

# imperative
bring :- M/NP/NP : lambda y:e.(lambda x:e.(bring(x, y)))
bring :- M/PP/NP : lambda x:e.(lambda y:e.(bring(x, y)))
walk :- M/PP : lambda x:e.(walk(x))

# 'to' as recipient argument of a command (eg. ``bring coffee to peter'')
to :- PP/NP : lambda x:e.(x)

# for "bob 's office"; "the office of the chair"
's :- NP/N\NP : lambda x:e.(lambda P:<e,t>.(a(lambda y:e.(and(P(y), possesses(x, y))))))
of :- NP\N/NP : lambda x:e.(lambda P:<e,t>.(lambda y:e.(and(P(y), possesses(x, y)))))

# determiners
the :- NP/N : lambda P:<e,t>.(a(lambda x:e.(P(x))))

# known atoms
peter :- NP : peter
ray :- NP : ray
greg :- NP : greg
dana :- NP : dana
scott :- NP : scott
justin :- NP : justin

# KB bare nouns
office :- N : office
kitchen :- N : kitchen
lab :- N : lab

# perception bare nouns
cylinder :- N : cylinder
bottle :- N : bottle

# perception adjectives
blue :- N/N : lambda P:<e,t>.(and(blue, P))
yellow :- N/N : lambda P:<e,t>.(and(yellow, P))
heavy :- N/N : lambda P:<e,t>.(and(heavy, P))
light :- N/N : lambda P:<e,t>.(and(light, P))
metal :- N/N : lambda P:<e,t>.(and(metal, P))
